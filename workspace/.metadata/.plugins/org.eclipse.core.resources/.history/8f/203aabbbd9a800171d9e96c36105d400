package stack;

public class stackusingarray {
	private int[] data;
	private int tos;
	
	public static final int DEFAULT_CAPACITY=10;
	
	public stackusingarray()throws Exception {
		// TODO Auto-generated constructor stub
		this(DEFAULT_CAPACITY);  //THIS WILL call that constructor  
		                        //CONSTRUCTOR WHICH HAVE CAPACITY AS PARAMETER
	}
	public stackusingarray(int capacity) throws Exception{
		if (capacity<=0){
			System.out.println("invalid capacity");
		}
		this.data=new int[capacity];
		this.tos=-1;
	}
	
	public int size(){
		return this.tos+1;
	}
	
	public boolean isempty(){
		if(this.size()==0){
			return true;
		}else{
			return false;
		}
	}
	
	public void push(int item)throws Exception{
		if(this.size()==this.data.length){
			throw new Exception("stack is full");
		}
		this.tos++;
		this.data[this.tos]=item;
	}
	
	public int pop()throws Exception{
		if(this.size()==0){
			throw new Exception("stack is empty");
		}
		int retval=this.data[this.tos];
		this.data[this.tos]=0;
		this.tos--;
		return retval;
	}
	
	public int top()throws Exception{
		if(this.size()==0){
			throw new Exception("stack is empty");
		}
		int retval=this.data[this.tos];
		return retval;
	}
	
	public void display() throws Exception{
		if(this.size()==0){
			throw new Exception("stack is empty");}
		for(int i=this.tos;i>=0;i--){
			System.out.println(this.data[i]+",");
		}
		System.out.println("END");
	}
	
	
	
}
